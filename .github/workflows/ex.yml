name: Build
on:
  workflow_call:
    inputs:
      env-type: 
        required: true
        type: string
        default: None
      hw-type:
        required: true
        type: string
        default: None

jobs:
  # build-docker:
  #   name: Build Docker (${{ inputs.env-type }}.${{ inputs.hw-type }})
  #   if: inputs.env-type == 'docker'
  #   runs-on: ubuntu-latest
  #   container: devjiu/cpu-hdk:check

  #   # output:
  #   #   out-id: out.${{ inputs.env-type }}.${{ inputs.hw-type }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Test
  #       run: |
  #         echo "env: " ${{ inputs.env-type }}
  #         echo "hw: " ${{ inputs.hw-type }}
  #         ls -la
  #         g++ main.cpp
  # build-conda: 
  #   name: Build Conda (${{ inputs.env-type }}.${{ inputs.hw-type }})
  #   if: inputs.env-type == 'conda'
  #   runs-on: ubuntu-latest

  #   # output:
  #   #   out-id: out.${{ inputs.env-type }}.${{ inputs.hw-type }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Test
  #       run: |
  #         echo "env: " ${{ inputs.env-type }}
  #         echo "hw: " ${{ inputs.hw-type }}
  #         ls -la
  #         g++ main.cpp
  build-common:
    name: Build (${{ inputs.env-type }}.${{ inputs.hw-type }})
    runs-on: ubuntu-latest

    # output:
    #   out-id: out.${{ inputs.env-type }}.${{ inputs.hw-type }}

    steps:
      - if: inputs.env-type == 'docker'
        uses: actions/cache@v3
        with:
          path: /tmp/docker-registry
          key: image-cached
          restore-keys: image-cached
      - if: inputs.env-type == 'docker'
        run: |
          docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
          docker pull localhost:5000/cache:latest || true
      - if: steps.cache.outputs.cache-hit != 'true' && inputs.env-type == 'docker'
        run: |
          docker pull devjiu/cpu-hdk:check
          docker tag devjiu/cpu-hdk:check localhost:5000/cache:latest
          docker push localhost:5000/cache:latest
      - if: inputs.env-type == 'docker'
        run: |
          docker run -i --name verify\
            -v ${PWD}:/home/hdk \
            -w /home/hdk \
            localhost:5000/cache:latest \
            /usr/bin/bash
          docker image ls -a
          docker container ls -a
          echo "PRE=docker exec verify" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - run: |
          ${{env.PRE}} echo "env: " ${{ inputs.env-type }}
          ${{env.PRE}} echo "hw: " ${{ inputs.hw-type }}
          ${{env.PRE}} ls -la ../
          ${{env.PRE}} g++ main.cpp